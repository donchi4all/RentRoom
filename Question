Class Lab #4 – Rent a room with classes 
 
- Copy and paste last week’s Lab 3 and call it Lab 4. 
- Change it to use classes that represent the Rental application. Add a Class Library called PropertyClasses to hold your classes so they can be reused easily in the future.
- Build it. - To your Windows Project, add a reference and using for PropertyClasses. 
- In your Windows Project form’s code, declare an object of the Class1 class.
- Make sure it compiles ok. - Before you code anything, draw UML diagrams for the classes you think you’ll need. Show them to me and get them approved before you code anything. 
- Design and code the classes yourself based on the data needed in the application, but think ahead because we’ll be using these classes for the rest of the semester. The better job you do today,  the less you’ll have to do later on.  - One hint – I have two classes.  - You should not have any inheritance here, but you should have Aggregation (remember that this is where one class contains objects of another class).
- Once your design is approved, create the classes in your class library and make sure they are marked public. 
- Code the classes based on your UML diagram. - Finally, change your form to incorporate objects of your Property classes instead of just controls and events. 
 
 
Other Requirements:
- Each of your classes should include a ToString() method the overrides ToString() from the Object class.
- Don’t forget to keep your classes separate from the GUI design and controls because you will be using them fora bunch of different applications each with a different GUI and types of controls.
- Lab 4 output is same as Lab 3. 
 
 
